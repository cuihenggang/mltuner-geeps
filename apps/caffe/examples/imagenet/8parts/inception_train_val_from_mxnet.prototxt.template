# Inception Network (GoogLeNet Batch Normalization Network)
name: "InceptionNetwork"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "/panfs/probescratch/BigLearning/hengganc/data/imagenet/8parts/train_lmdb.%"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "/panfs/probescratch/BigLearning/hengganc/data/imagenet/8parts-v0/val_lmdb.%"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  bottom: "data"
  top: "conv_conv1"
  name: "conv_conv1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_conv1"
  name: "bn_conv1"
  top: "bn_conv1"
  top: "bn_conv1/temp1"
  top: "bn_conv1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_conv1"
  top: "bn_conv1/sc"
  name: "bn_conv1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_conv1/sc"
  top: "bn_conv1/sc"
  name: "relu_conv1"
  type: "ReLU"
}
layer {
  bottom: "bn_conv1/sc"
  top: "pool1"
  top: "pool1/temp"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv_conv2red"
  name: "conv_conv2red"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_conv2red"
  name: "bn_conv2red"
  top: "bn_conv2red"
  top: "bn_conv2red/temp1"
  top: "bn_conv2red/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_conv2red"
  top: "bn_conv2red/sc"
  name: "bn_conv2red/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_conv2red/sc"
  top: "bn_conv2red/sc"
  name: "relu_conv2red"
  type: "ReLU"
}
layer {
  bottom: "bn_conv2red/sc"
  top: "conv_conv2"
  name: "conv_conv2"
  type: "Convolution"
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_conv2"
  name: "bn_conv2"
  top: "bn_conv2"
  top: "bn_conv2/temp1"
  top: "bn_conv2/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_conv2"
  top: "bn_conv2/sc"
  name: "bn_conv2/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_conv2/sc"
  top: "bn_conv2/sc"
  name: "relu_conv2"
  type: "ReLU"
}
layer {
  bottom: "bn_conv2/sc"
  top: "pool2"
  top: "pool2/temp"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv_3a_1x1"
  name: "conv_3a_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_1x1"
  name: "bn_3a_1x1"
  top: "bn_3a_1x1"
  top: "bn_3a_1x1/temp1"
  top: "bn_3a_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_1x1"
  top: "bn_3a_1x1/sc"
  name: "bn_3a_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_1x1/sc"
  top: "bn_3a_1x1/sc"
  name: "relu_3a_1x1"
  type: "ReLU"
}
layer {
  bottom: "pool2"
  top: "conv_3a_3x3_reduce"
  name: "conv_3a_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_3x3_reduce"
  name: "bn_3a_3x3_reduce"
  top: "bn_3a_3x3_reduce"
  top: "bn_3a_3x3_reduce/temp1"
  top: "bn_3a_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_3x3_reduce"
  top: "bn_3a_3x3_reduce/sc"
  name: "bn_3a_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_3x3_reduce/sc"
  top: "bn_3a_3x3_reduce/sc"
  name: "relu_3a_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_3a_3x3_reduce/sc"
  top: "conv_3a_3x3"
  name: "conv_3a_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_3x3"
  name: "bn_3a_3x3"
  top: "bn_3a_3x3"
  top: "bn_3a_3x3/temp1"
  top: "bn_3a_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_3x3"
  top: "bn_3a_3x3/sc"
  name: "bn_3a_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_3x3/sc"
  top: "bn_3a_3x3/sc"
  name: "relu_3a_3x3"
  type: "ReLU"
}
layer {
  bottom: "pool2"
  top: "conv_3a_double_3x3_reduce"
  name: "conv_3a_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_double_3x3_reduce"
  name: "bn_3a_double_3x3_reduce"
  top: "bn_3a_double_3x3_reduce"
  top: "bn_3a_double_3x3_reduce/temp1"
  top: "bn_3a_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_double_3x3_reduce"
  top: "bn_3a_double_3x3_reduce/sc"
  name: "bn_3a_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_double_3x3_reduce/sc"
  top: "bn_3a_double_3x3_reduce/sc"
  name: "relu_3a_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_3a_double_3x3_reduce/sc"
  top: "conv_3a_double_3x3_0"
  name: "conv_3a_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_double_3x3_0"
  name: "bn_3a_double_3x3_0"
  top: "bn_3a_double_3x3_0"
  top: "bn_3a_double_3x3_0/temp1"
  top: "bn_3a_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_double_3x3_0"
  top: "bn_3a_double_3x3_0/sc"
  name: "bn_3a_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_double_3x3_0/sc"
  top: "bn_3a_double_3x3_0/sc"
  name: "relu_3a_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_3a_double_3x3_0/sc"
  top: "conv_3a_double_3x3_1"
  name: "conv_3a_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_double_3x3_1"
  name: "bn_3a_double_3x3_1"
  top: "bn_3a_double_3x3_1"
  top: "bn_3a_double_3x3_1/temp1"
  top: "bn_3a_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_double_3x3_1"
  top: "bn_3a_double_3x3_1/sc"
  name: "bn_3a_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_double_3x3_1/sc"
  top: "bn_3a_double_3x3_1/sc"
  name: "relu_3a_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "pool2"
  top: "avg_pool_3a_pool"
  name: "avg_pool_3a_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_3a_pool"
  top: "conv_3a_proj"
  name: "conv_3a_proj"
  type: "Convolution"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3a_proj"
  name: "bn_3a_proj"
  top: "bn_3a_proj"
  top: "bn_3a_proj/temp1"
  top: "bn_3a_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3a_proj"
  top: "bn_3a_proj/sc"
  name: "bn_3a_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3a_proj/sc"
  top: "bn_3a_proj/sc"
  name: "relu_3a_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_3a_1x1/sc"
  bottom: "bn_3a_3x3/sc"
  bottom: "bn_3a_double_3x3_1/sc"
  bottom: "bn_3a_proj/sc"
  top: "ch_concat_3a_chconcat"
  name: "ch_concat_3a_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_3a_chconcat"
  top: "conv_3b_1x1"
  name: "conv_3b_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_1x1"
  name: "bn_3b_1x1"
  top: "bn_3b_1x1"
  top: "bn_3b_1x1/temp1"
  top: "bn_3b_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_1x1"
  top: "bn_3b_1x1/sc"
  name: "bn_3b_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_1x1/sc"
  top: "bn_3b_1x1/sc"
  name: "relu_3b_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3a_chconcat"
  top: "conv_3b_3x3_reduce"
  name: "conv_3b_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_3x3_reduce"
  name: "bn_3b_3x3_reduce"
  top: "bn_3b_3x3_reduce"
  top: "bn_3b_3x3_reduce/temp1"
  top: "bn_3b_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_3x3_reduce"
  top: "bn_3b_3x3_reduce/sc"
  name: "bn_3b_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_3x3_reduce/sc"
  top: "bn_3b_3x3_reduce/sc"
  name: "relu_3b_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_3b_3x3_reduce/sc"
  top: "conv_3b_3x3"
  name: "conv_3b_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_3x3"
  name: "bn_3b_3x3"
  top: "bn_3b_3x3"
  top: "bn_3b_3x3/temp1"
  top: "bn_3b_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_3x3"
  top: "bn_3b_3x3/sc"
  name: "bn_3b_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_3x3/sc"
  top: "bn_3b_3x3/sc"
  name: "relu_3b_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3a_chconcat"
  top: "conv_3b_double_3x3_reduce"
  name: "conv_3b_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_double_3x3_reduce"
  name: "bn_3b_double_3x3_reduce"
  top: "bn_3b_double_3x3_reduce"
  top: "bn_3b_double_3x3_reduce/temp1"
  top: "bn_3b_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_double_3x3_reduce"
  top: "bn_3b_double_3x3_reduce/sc"
  name: "bn_3b_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_double_3x3_reduce/sc"
  top: "bn_3b_double_3x3_reduce/sc"
  name: "relu_3b_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_3b_double_3x3_reduce/sc"
  top: "conv_3b_double_3x3_0"
  name: "conv_3b_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_double_3x3_0"
  name: "bn_3b_double_3x3_0"
  top: "bn_3b_double_3x3_0"
  top: "bn_3b_double_3x3_0/temp1"
  top: "bn_3b_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_double_3x3_0"
  top: "bn_3b_double_3x3_0/sc"
  name: "bn_3b_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_double_3x3_0/sc"
  top: "bn_3b_double_3x3_0/sc"
  name: "relu_3b_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_3b_double_3x3_0/sc"
  top: "conv_3b_double_3x3_1"
  name: "conv_3b_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_double_3x3_1"
  name: "bn_3b_double_3x3_1"
  top: "bn_3b_double_3x3_1"
  top: "bn_3b_double_3x3_1/temp1"
  top: "bn_3b_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_double_3x3_1"
  top: "bn_3b_double_3x3_1/sc"
  name: "bn_3b_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_double_3x3_1/sc"
  top: "bn_3b_double_3x3_1/sc"
  name: "relu_3b_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3a_chconcat"
  top: "avg_pool_3b_pool"
  name: "avg_pool_3b_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_3b_pool"
  top: "conv_3b_proj"
  name: "conv_3b_proj"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3b_proj"
  name: "bn_3b_proj"
  top: "bn_3b_proj"
  top: "bn_3b_proj/temp1"
  top: "bn_3b_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3b_proj"
  top: "bn_3b_proj/sc"
  name: "bn_3b_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3b_proj/sc"
  top: "bn_3b_proj/sc"
  name: "relu_3b_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_3b_1x1/sc"
  bottom: "bn_3b_3x3/sc"
  bottom: "bn_3b_double_3x3_1/sc"
  bottom: "bn_3b_proj/sc"
  top: "ch_concat_3b_chconcat"
  name: "ch_concat_3b_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_3b_chconcat"
  top: "conv_3c_3x3_reduce"
  name: "conv_3c_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3c_3x3_reduce"
  name: "bn_3c_3x3_reduce"
  top: "bn_3c_3x3_reduce"
  top: "bn_3c_3x3_reduce/temp1"
  top: "bn_3c_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3c_3x3_reduce"
  top: "bn_3c_3x3_reduce/sc"
  name: "bn_3c_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3c_3x3_reduce/sc"
  top: "bn_3c_3x3_reduce/sc"
  name: "relu_3c_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_3c_3x3_reduce/sc"
  top: "conv_3c_3x3"
  name: "conv_3c_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3c_3x3"
  name: "bn_3c_3x3"
  top: "bn_3c_3x3"
  top: "bn_3c_3x3/temp1"
  top: "bn_3c_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3c_3x3"
  top: "bn_3c_3x3/sc"
  name: "bn_3c_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3c_3x3/sc"
  top: "bn_3c_3x3/sc"
  name: "relu_3c_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3b_chconcat"
  top: "conv_3c_double_3x3_reduce"
  name: "conv_3c_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3c_double_3x3_reduce"
  name: "bn_3c_double_3x3_reduce"
  top: "bn_3c_double_3x3_reduce"
  top: "bn_3c_double_3x3_reduce/temp1"
  top: "bn_3c_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3c_double_3x3_reduce"
  top: "bn_3c_double_3x3_reduce/sc"
  name: "bn_3c_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3c_double_3x3_reduce/sc"
  top: "bn_3c_double_3x3_reduce/sc"
  name: "relu_3c_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_3c_double_3x3_reduce/sc"
  top: "conv_3c_double_3x3_0"
  name: "conv_3c_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3c_double_3x3_0"
  name: "bn_3c_double_3x3_0"
  top: "bn_3c_double_3x3_0"
  top: "bn_3c_double_3x3_0/temp1"
  top: "bn_3c_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3c_double_3x3_0"
  top: "bn_3c_double_3x3_0/sc"
  name: "bn_3c_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3c_double_3x3_0/sc"
  top: "bn_3c_double_3x3_0/sc"
  name: "relu_3c_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_3c_double_3x3_0/sc"
  top: "conv_3c_double_3x3_1"
  name: "conv_3c_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_3c_double_3x3_1"
  name: "bn_3c_double_3x3_1"
  top: "bn_3c_double_3x3_1"
  top: "bn_3c_double_3x3_1/temp1"
  top: "bn_3c_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_3c_double_3x3_1"
  top: "bn_3c_double_3x3_1/sc"
  name: "bn_3c_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_3c_double_3x3_1/sc"
  top: "bn_3c_double_3x3_1/sc"
  name: "relu_3c_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3b_chconcat"
  top: "max_pool_3c_pool"
  top: "max_pool_3c_pool/temp"
  name: "max_pool_3c_pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "bn_3c_3x3/sc"
  bottom: "bn_3c_double_3x3_1/sc"
  bottom: "max_pool_3c_pool"
  top: "ch_concat_3c_chconcat"
  name: "ch_concat_3c_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_3c_chconcat"
  top: "conv_4a_1x1"
  name: "conv_4a_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 224
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_1x1"
  name: "bn_4a_1x1"
  top: "bn_4a_1x1"
  top: "bn_4a_1x1/temp1"
  top: "bn_4a_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_1x1"
  top: "bn_4a_1x1/sc"
  name: "bn_4a_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_1x1/sc"
  top: "bn_4a_1x1/sc"
  name: "relu_4a_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3c_chconcat"
  top: "conv_4a_3x3_reduce"
  name: "conv_4a_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_3x3_reduce"
  name: "bn_4a_3x3_reduce"
  top: "bn_4a_3x3_reduce"
  top: "bn_4a_3x3_reduce/temp1"
  top: "bn_4a_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_3x3_reduce"
  top: "bn_4a_3x3_reduce/sc"
  name: "bn_4a_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_3x3_reduce/sc"
  top: "bn_4a_3x3_reduce/sc"
  name: "relu_4a_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4a_3x3_reduce/sc"
  top: "conv_4a_3x3"
  name: "conv_4a_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_3x3"
  name: "bn_4a_3x3"
  top: "bn_4a_3x3"
  top: "bn_4a_3x3/temp1"
  top: "bn_4a_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_3x3"
  top: "bn_4a_3x3/sc"
  name: "bn_4a_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_3x3/sc"
  top: "bn_4a_3x3/sc"
  name: "relu_4a_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3c_chconcat"
  top: "conv_4a_double_3x3_reduce"
  name: "conv_4a_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_double_3x3_reduce"
  name: "bn_4a_double_3x3_reduce"
  top: "bn_4a_double_3x3_reduce"
  top: "bn_4a_double_3x3_reduce/temp1"
  top: "bn_4a_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_double_3x3_reduce"
  top: "bn_4a_double_3x3_reduce/sc"
  name: "bn_4a_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_double_3x3_reduce/sc"
  top: "bn_4a_double_3x3_reduce/sc"
  name: "relu_4a_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4a_double_3x3_reduce/sc"
  top: "conv_4a_double_3x3_0"
  name: "conv_4a_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_double_3x3_0"
  name: "bn_4a_double_3x3_0"
  top: "bn_4a_double_3x3_0"
  top: "bn_4a_double_3x3_0/temp1"
  top: "bn_4a_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_double_3x3_0"
  top: "bn_4a_double_3x3_0/sc"
  name: "bn_4a_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_double_3x3_0/sc"
  top: "bn_4a_double_3x3_0/sc"
  name: "relu_4a_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_4a_double_3x3_0/sc"
  top: "conv_4a_double_3x3_1"
  name: "conv_4a_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_double_3x3_1"
  name: "bn_4a_double_3x3_1"
  top: "bn_4a_double_3x3_1"
  top: "bn_4a_double_3x3_1/temp1"
  top: "bn_4a_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_double_3x3_1"
  top: "bn_4a_double_3x3_1/sc"
  name: "bn_4a_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_double_3x3_1/sc"
  top: "bn_4a_double_3x3_1/sc"
  name: "relu_4a_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_3c_chconcat"
  top: "avg_pool_4a_pool"
  name: "avg_pool_4a_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_4a_pool"
  top: "conv_4a_proj"
  name: "conv_4a_proj"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4a_proj"
  name: "bn_4a_proj"
  top: "bn_4a_proj"
  top: "bn_4a_proj/temp1"
  top: "bn_4a_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4a_proj"
  top: "bn_4a_proj/sc"
  name: "bn_4a_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4a_proj/sc"
  top: "bn_4a_proj/sc"
  name: "relu_4a_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_4a_1x1/sc"
  bottom: "bn_4a_3x3/sc"
  bottom: "bn_4a_double_3x3_1/sc"
  bottom: "bn_4a_proj/sc"
  top: "ch_concat_4a_chconcat"
  name: "ch_concat_4a_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_4a_chconcat"
  top: "conv_4b_1x1"
  name: "conv_4b_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 192
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_1x1"
  name: "bn_4b_1x1"
  top: "bn_4b_1x1"
  top: "bn_4b_1x1/temp1"
  top: "bn_4b_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_1x1"
  top: "bn_4b_1x1/sc"
  name: "bn_4b_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_1x1/sc"
  top: "bn_4b_1x1/sc"
  name: "relu_4b_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4a_chconcat"
  top: "conv_4b_3x3_reduce"
  name: "conv_4b_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_3x3_reduce"
  name: "bn_4b_3x3_reduce"
  top: "bn_4b_3x3_reduce"
  top: "bn_4b_3x3_reduce/temp1"
  top: "bn_4b_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_3x3_reduce"
  top: "bn_4b_3x3_reduce/sc"
  name: "bn_4b_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_3x3_reduce/sc"
  top: "bn_4b_3x3_reduce/sc"
  name: "relu_4b_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4b_3x3_reduce/sc"
  top: "conv_4b_3x3"
  name: "conv_4b_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_3x3"
  name: "bn_4b_3x3"
  top: "bn_4b_3x3"
  top: "bn_4b_3x3/temp1"
  top: "bn_4b_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_3x3"
  top: "bn_4b_3x3/sc"
  name: "bn_4b_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_3x3/sc"
  top: "bn_4b_3x3/sc"
  name: "relu_4b_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4a_chconcat"
  top: "conv_4b_double_3x3_reduce"
  name: "conv_4b_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_double_3x3_reduce"
  name: "bn_4b_double_3x3_reduce"
  top: "bn_4b_double_3x3_reduce"
  top: "bn_4b_double_3x3_reduce/temp1"
  top: "bn_4b_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_double_3x3_reduce"
  top: "bn_4b_double_3x3_reduce/sc"
  name: "bn_4b_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_double_3x3_reduce/sc"
  top: "bn_4b_double_3x3_reduce/sc"
  name: "relu_4b_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4b_double_3x3_reduce/sc"
  top: "conv_4b_double_3x3_0"
  name: "conv_4b_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_double_3x3_0"
  name: "bn_4b_double_3x3_0"
  top: "bn_4b_double_3x3_0"
  top: "bn_4b_double_3x3_0/temp1"
  top: "bn_4b_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_double_3x3_0"
  top: "bn_4b_double_3x3_0/sc"
  name: "bn_4b_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_double_3x3_0/sc"
  top: "bn_4b_double_3x3_0/sc"
  name: "relu_4b_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_4b_double_3x3_0/sc"
  top: "conv_4b_double_3x3_1"
  name: "conv_4b_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_double_3x3_1"
  name: "bn_4b_double_3x3_1"
  top: "bn_4b_double_3x3_1"
  top: "bn_4b_double_3x3_1/temp1"
  top: "bn_4b_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_double_3x3_1"
  top: "bn_4b_double_3x3_1/sc"
  name: "bn_4b_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_double_3x3_1/sc"
  top: "bn_4b_double_3x3_1/sc"
  name: "relu_4b_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4a_chconcat"
  top: "avg_pool_4b_pool"
  name: "avg_pool_4b_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_4b_pool"
  top: "conv_4b_proj"
  name: "conv_4b_proj"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4b_proj"
  name: "bn_4b_proj"
  top: "bn_4b_proj"
  top: "bn_4b_proj/temp1"
  top: "bn_4b_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4b_proj"
  top: "bn_4b_proj/sc"
  name: "bn_4b_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4b_proj/sc"
  top: "bn_4b_proj/sc"
  name: "relu_4b_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_4b_1x1/sc"
  bottom: "bn_4b_3x3/sc"
  bottom: "bn_4b_double_3x3_1/sc"
  bottom: "bn_4b_proj/sc"
  top: "ch_concat_4b_chconcat"
  name: "ch_concat_4b_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_4b_chconcat"
  top: "conv_4c_1x1"
  name: "conv_4c_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 160
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_1x1"
  name: "bn_4c_1x1"
  top: "bn_4c_1x1"
  top: "bn_4c_1x1/temp1"
  top: "bn_4c_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_1x1"
  top: "bn_4c_1x1/sc"
  name: "bn_4c_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_1x1/sc"
  top: "bn_4c_1x1/sc"
  name: "relu_4c_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4b_chconcat"
  top: "conv_4c_3x3_reduce"
  name: "conv_4c_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_3x3_reduce"
  name: "bn_4c_3x3_reduce"
  top: "bn_4c_3x3_reduce"
  top: "bn_4c_3x3_reduce/temp1"
  top: "bn_4c_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_3x3_reduce"
  top: "bn_4c_3x3_reduce/sc"
  name: "bn_4c_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_3x3_reduce/sc"
  top: "bn_4c_3x3_reduce/sc"
  name: "relu_4c_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4c_3x3_reduce/sc"
  top: "conv_4c_3x3"
  name: "conv_4c_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_3x3"
  name: "bn_4c_3x3"
  top: "bn_4c_3x3"
  top: "bn_4c_3x3/temp1"
  top: "bn_4c_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_3x3"
  top: "bn_4c_3x3/sc"
  name: "bn_4c_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_3x3/sc"
  top: "bn_4c_3x3/sc"
  name: "relu_4c_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4b_chconcat"
  top: "conv_4c_double_3x3_reduce"
  name: "conv_4c_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_double_3x3_reduce"
  name: "bn_4c_double_3x3_reduce"
  top: "bn_4c_double_3x3_reduce"
  top: "bn_4c_double_3x3_reduce/temp1"
  top: "bn_4c_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_double_3x3_reduce"
  top: "bn_4c_double_3x3_reduce/sc"
  name: "bn_4c_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_double_3x3_reduce/sc"
  top: "bn_4c_double_3x3_reduce/sc"
  name: "relu_4c_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4c_double_3x3_reduce/sc"
  top: "conv_4c_double_3x3_0"
  name: "conv_4c_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_double_3x3_0"
  name: "bn_4c_double_3x3_0"
  top: "bn_4c_double_3x3_0"
  top: "bn_4c_double_3x3_0/temp1"
  top: "bn_4c_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_double_3x3_0"
  top: "bn_4c_double_3x3_0/sc"
  name: "bn_4c_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_double_3x3_0/sc"
  top: "bn_4c_double_3x3_0/sc"
  name: "relu_4c_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_4c_double_3x3_0/sc"
  top: "conv_4c_double_3x3_1"
  name: "conv_4c_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_double_3x3_1"
  name: "bn_4c_double_3x3_1"
  top: "bn_4c_double_3x3_1"
  top: "bn_4c_double_3x3_1/temp1"
  top: "bn_4c_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_double_3x3_1"
  top: "bn_4c_double_3x3_1/sc"
  name: "bn_4c_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_double_3x3_1/sc"
  top: "bn_4c_double_3x3_1/sc"
  name: "relu_4c_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4b_chconcat"
  top: "avg_pool_4c_pool"
  name: "avg_pool_4c_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_4c_pool"
  top: "conv_4c_proj"
  name: "conv_4c_proj"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4c_proj"
  name: "bn_4c_proj"
  top: "bn_4c_proj"
  top: "bn_4c_proj/temp1"
  top: "bn_4c_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4c_proj"
  top: "bn_4c_proj/sc"
  name: "bn_4c_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4c_proj/sc"
  top: "bn_4c_proj/sc"
  name: "relu_4c_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_4c_1x1/sc"
  bottom: "bn_4c_3x3/sc"
  bottom: "bn_4c_double_3x3_1/sc"
  bottom: "bn_4c_proj/sc"
  top: "ch_concat_4c_chconcat"
  name: "ch_concat_4c_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_4c_chconcat"
  top: "conv_4d_1x1"
  name: "conv_4d_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_1x1"
  name: "bn_4d_1x1"
  top: "bn_4d_1x1"
  top: "bn_4d_1x1/temp1"
  top: "bn_4d_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_1x1"
  top: "bn_4d_1x1/sc"
  name: "bn_4d_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_1x1/sc"
  top: "bn_4d_1x1/sc"
  name: "relu_4d_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4c_chconcat"
  top: "conv_4d_3x3_reduce"
  name: "conv_4d_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_3x3_reduce"
  name: "bn_4d_3x3_reduce"
  top: "bn_4d_3x3_reduce"
  top: "bn_4d_3x3_reduce/temp1"
  top: "bn_4d_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_3x3_reduce"
  top: "bn_4d_3x3_reduce/sc"
  name: "bn_4d_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_3x3_reduce/sc"
  top: "bn_4d_3x3_reduce/sc"
  name: "relu_4d_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4d_3x3_reduce/sc"
  top: "conv_4d_3x3"
  name: "conv_4d_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_3x3"
  name: "bn_4d_3x3"
  top: "bn_4d_3x3"
  top: "bn_4d_3x3/temp1"
  top: "bn_4d_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_3x3"
  top: "bn_4d_3x3/sc"
  name: "bn_4d_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_3x3/sc"
  top: "bn_4d_3x3/sc"
  name: "relu_4d_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4c_chconcat"
  top: "conv_4d_double_3x3_reduce"
  name: "conv_4d_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 160
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_double_3x3_reduce"
  name: "bn_4d_double_3x3_reduce"
  top: "bn_4d_double_3x3_reduce"
  top: "bn_4d_double_3x3_reduce/temp1"
  top: "bn_4d_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_double_3x3_reduce"
  top: "bn_4d_double_3x3_reduce/sc"
  name: "bn_4d_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_double_3x3_reduce/sc"
  top: "bn_4d_double_3x3_reduce/sc"
  name: "relu_4d_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4d_double_3x3_reduce/sc"
  top: "conv_4d_double_3x3_0"
  name: "conv_4d_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_double_3x3_0"
  name: "bn_4d_double_3x3_0"
  top: "bn_4d_double_3x3_0"
  top: "bn_4d_double_3x3_0/temp1"
  top: "bn_4d_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_double_3x3_0"
  top: "bn_4d_double_3x3_0/sc"
  name: "bn_4d_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_double_3x3_0/sc"
  top: "bn_4d_double_3x3_0/sc"
  name: "relu_4d_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_4d_double_3x3_0/sc"
  top: "conv_4d_double_3x3_1"
  name: "conv_4d_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_double_3x3_1"
  name: "bn_4d_double_3x3_1"
  top: "bn_4d_double_3x3_1"
  top: "bn_4d_double_3x3_1/temp1"
  top: "bn_4d_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_double_3x3_1"
  top: "bn_4d_double_3x3_1/sc"
  name: "bn_4d_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_double_3x3_1/sc"
  top: "bn_4d_double_3x3_1/sc"
  name: "relu_4d_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4c_chconcat"
  top: "avg_pool_4d_pool"
  name: "avg_pool_4d_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_4d_pool"
  top: "conv_4d_proj"
  name: "conv_4d_proj"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4d_proj"
  name: "bn_4d_proj"
  top: "bn_4d_proj"
  top: "bn_4d_proj/temp1"
  top: "bn_4d_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4d_proj"
  top: "bn_4d_proj/sc"
  name: "bn_4d_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4d_proj/sc"
  top: "bn_4d_proj/sc"
  name: "relu_4d_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_4d_1x1/sc"
  bottom: "bn_4d_3x3/sc"
  bottom: "bn_4d_double_3x3_1/sc"
  bottom: "bn_4d_proj/sc"
  top: "ch_concat_4d_chconcat"
  name: "ch_concat_4d_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_4d_chconcat"
  top: "conv_4e_3x3_reduce"
  name: "conv_4e_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4e_3x3_reduce"
  name: "bn_4e_3x3_reduce"
  top: "bn_4e_3x3_reduce"
  top: "bn_4e_3x3_reduce/temp1"
  top: "bn_4e_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4e_3x3_reduce"
  top: "bn_4e_3x3_reduce/sc"
  name: "bn_4e_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4e_3x3_reduce/sc"
  top: "bn_4e_3x3_reduce/sc"
  name: "relu_4e_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4e_3x3_reduce/sc"
  top: "conv_4e_3x3"
  name: "conv_4e_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4e_3x3"
  name: "bn_4e_3x3"
  top: "bn_4e_3x3"
  top: "bn_4e_3x3/temp1"
  top: "bn_4e_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4e_3x3"
  top: "bn_4e_3x3/sc"
  name: "bn_4e_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4e_3x3/sc"
  top: "bn_4e_3x3/sc"
  name: "relu_4e_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4d_chconcat"
  top: "conv_4e_double_3x3_reduce"
  name: "conv_4e_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 192
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4e_double_3x3_reduce"
  name: "bn_4e_double_3x3_reduce"
  top: "bn_4e_double_3x3_reduce"
  top: "bn_4e_double_3x3_reduce/temp1"
  top: "bn_4e_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4e_double_3x3_reduce"
  top: "bn_4e_double_3x3_reduce/sc"
  name: "bn_4e_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4e_double_3x3_reduce/sc"
  top: "bn_4e_double_3x3_reduce/sc"
  name: "relu_4e_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_4e_double_3x3_reduce/sc"
  top: "conv_4e_double_3x3_0"
  name: "conv_4e_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4e_double_3x3_0"
  name: "bn_4e_double_3x3_0"
  top: "bn_4e_double_3x3_0"
  top: "bn_4e_double_3x3_0/temp1"
  top: "bn_4e_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4e_double_3x3_0"
  top: "bn_4e_double_3x3_0/sc"
  name: "bn_4e_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4e_double_3x3_0/sc"
  top: "bn_4e_double_3x3_0/sc"
  name: "relu_4e_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_4e_double_3x3_0/sc"
  top: "conv_4e_double_3x3_1"
  name: "conv_4e_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_4e_double_3x3_1"
  name: "bn_4e_double_3x3_1"
  top: "bn_4e_double_3x3_1"
  top: "bn_4e_double_3x3_1/temp1"
  top: "bn_4e_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_4e_double_3x3_1"
  top: "bn_4e_double_3x3_1/sc"
  name: "bn_4e_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_4e_double_3x3_1/sc"
  top: "bn_4e_double_3x3_1/sc"
  name: "relu_4e_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4d_chconcat"
  top: "max_pool_4e_pool"
  top: "max_pool_4e_pool/temp"
  name: "max_pool_4e_pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "bn_4e_3x3/sc"
  bottom: "bn_4e_double_3x3_1/sc"
  bottom: "max_pool_4e_pool"
  top: "ch_concat_4e_chconcat"
  name: "ch_concat_4e_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_4e_chconcat"
  top: "conv_5a_1x1"
  name: "conv_5a_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 352
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_1x1"
  name: "bn_5a_1x1"
  top: "bn_5a_1x1"
  top: "bn_5a_1x1/temp1"
  top: "bn_5a_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_1x1"
  top: "bn_5a_1x1/sc"
  name: "bn_5a_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_1x1/sc"
  top: "bn_5a_1x1/sc"
  name: "relu_5a_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4e_chconcat"
  top: "conv_5a_3x3_reduce"
  name: "conv_5a_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 192
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_3x3_reduce"
  name: "bn_5a_3x3_reduce"
  top: "bn_5a_3x3_reduce"
  top: "bn_5a_3x3_reduce/temp1"
  top: "bn_5a_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_3x3_reduce"
  top: "bn_5a_3x3_reduce/sc"
  name: "bn_5a_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_3x3_reduce/sc"
  top: "bn_5a_3x3_reduce/sc"
  name: "relu_5a_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_5a_3x3_reduce/sc"
  top: "conv_5a_3x3"
  name: "conv_5a_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_3x3"
  name: "bn_5a_3x3"
  top: "bn_5a_3x3"
  top: "bn_5a_3x3/temp1"
  top: "bn_5a_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_3x3"
  top: "bn_5a_3x3/sc"
  name: "bn_5a_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_3x3/sc"
  top: "bn_5a_3x3/sc"
  name: "relu_5a_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4e_chconcat"
  top: "conv_5a_double_3x3_reduce"
  name: "conv_5a_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 160
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_double_3x3_reduce"
  name: "bn_5a_double_3x3_reduce"
  top: "bn_5a_double_3x3_reduce"
  top: "bn_5a_double_3x3_reduce/temp1"
  top: "bn_5a_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_double_3x3_reduce"
  top: "bn_5a_double_3x3_reduce/sc"
  name: "bn_5a_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_double_3x3_reduce/sc"
  top: "bn_5a_double_3x3_reduce/sc"
  name: "relu_5a_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_5a_double_3x3_reduce/sc"
  top: "conv_5a_double_3x3_0"
  name: "conv_5a_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_double_3x3_0"
  name: "bn_5a_double_3x3_0"
  top: "bn_5a_double_3x3_0"
  top: "bn_5a_double_3x3_0/temp1"
  top: "bn_5a_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_double_3x3_0"
  top: "bn_5a_double_3x3_0/sc"
  name: "bn_5a_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_double_3x3_0/sc"
  top: "bn_5a_double_3x3_0/sc"
  name: "relu_5a_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_5a_double_3x3_0/sc"
  top: "conv_5a_double_3x3_1"
  name: "conv_5a_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_double_3x3_1"
  name: "bn_5a_double_3x3_1"
  top: "bn_5a_double_3x3_1"
  top: "bn_5a_double_3x3_1/temp1"
  top: "bn_5a_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_double_3x3_1"
  top: "bn_5a_double_3x3_1/sc"
  name: "bn_5a_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_double_3x3_1/sc"
  top: "bn_5a_double_3x3_1/sc"
  name: "relu_5a_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_4e_chconcat"
  top: "avg_pool_5a_pool"
  name: "avg_pool_5a_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "avg_pool_5a_pool"
  top: "conv_5a_proj"
  name: "conv_5a_proj"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5a_proj"
  name: "bn_5a_proj"
  top: "bn_5a_proj"
  top: "bn_5a_proj/temp1"
  top: "bn_5a_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5a_proj"
  top: "bn_5a_proj/sc"
  name: "bn_5a_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5a_proj/sc"
  top: "bn_5a_proj/sc"
  name: "relu_5a_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_5a_1x1/sc"
  bottom: "bn_5a_3x3/sc"
  bottom: "bn_5a_double_3x3_1/sc"
  bottom: "bn_5a_proj/sc"
  top: "ch_concat_5a_chconcat"
  name: "ch_concat_5a_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_5a_chconcat"
  top: "conv_5b_1x1"
  name: "conv_5b_1x1"
  type: "Convolution"
  convolution_param {
    num_output: 352
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_1x1"
  name: "bn_5b_1x1"
  top: "bn_5b_1x1"
  top: "bn_5b_1x1/temp1"
  top: "bn_5b_1x1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_1x1"
  top: "bn_5b_1x1/sc"
  name: "bn_5b_1x1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_1x1/sc"
  top: "bn_5b_1x1/sc"
  name: "relu_5b_1x1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_5a_chconcat"
  top: "conv_5b_3x3_reduce"
  name: "conv_5b_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 192
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_3x3_reduce"
  name: "bn_5b_3x3_reduce"
  top: "bn_5b_3x3_reduce"
  top: "bn_5b_3x3_reduce/temp1"
  top: "bn_5b_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_3x3_reduce"
  top: "bn_5b_3x3_reduce/sc"
  name: "bn_5b_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_3x3_reduce/sc"
  top: "bn_5b_3x3_reduce/sc"
  name: "relu_5b_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_5b_3x3_reduce/sc"
  top: "conv_5b_3x3"
  name: "conv_5b_3x3"
  type: "Convolution"
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_3x3"
  name: "bn_5b_3x3"
  top: "bn_5b_3x3"
  top: "bn_5b_3x3/temp1"
  top: "bn_5b_3x3/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_3x3"
  top: "bn_5b_3x3/sc"
  name: "bn_5b_3x3/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_3x3/sc"
  top: "bn_5b_3x3/sc"
  name: "relu_5b_3x3"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_5a_chconcat"
  top: "conv_5b_double_3x3_reduce"
  name: "conv_5b_double_3x3_reduce"
  type: "Convolution"
  convolution_param {
    num_output: 192
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_double_3x3_reduce"
  name: "bn_5b_double_3x3_reduce"
  top: "bn_5b_double_3x3_reduce"
  top: "bn_5b_double_3x3_reduce/temp1"
  top: "bn_5b_double_3x3_reduce/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_double_3x3_reduce"
  top: "bn_5b_double_3x3_reduce/sc"
  name: "bn_5b_double_3x3_reduce/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_double_3x3_reduce/sc"
  top: "bn_5b_double_3x3_reduce/sc"
  name: "relu_5b_double_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "bn_5b_double_3x3_reduce/sc"
  top: "conv_5b_double_3x3_0"
  name: "conv_5b_double_3x3_0"
  type: "Convolution"
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_double_3x3_0"
  name: "bn_5b_double_3x3_0"
  top: "bn_5b_double_3x3_0"
  top: "bn_5b_double_3x3_0/temp1"
  top: "bn_5b_double_3x3_0/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_double_3x3_0"
  top: "bn_5b_double_3x3_0/sc"
  name: "bn_5b_double_3x3_0/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_double_3x3_0/sc"
  top: "bn_5b_double_3x3_0/sc"
  name: "relu_5b_double_3x3_0"
  type: "ReLU"
}
layer {
  bottom: "bn_5b_double_3x3_0/sc"
  top: "conv_5b_double_3x3_1"
  name: "conv_5b_double_3x3_1"
  type: "Convolution"
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_double_3x3_1"
  name: "bn_5b_double_3x3_1"
  top: "bn_5b_double_3x3_1"
  top: "bn_5b_double_3x3_1/temp1"
  top: "bn_5b_double_3x3_1/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_double_3x3_1"
  top: "bn_5b_double_3x3_1/sc"
  name: "bn_5b_double_3x3_1/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_double_3x3_1/sc"
  top: "bn_5b_double_3x3_1/sc"
  name: "relu_5b_double_3x3_1"
  type: "ReLU"
}
layer {
  bottom: "ch_concat_5a_chconcat"
  top: "max_pool_5b_pool"
  top: "max_pool_5b_pool/temp"
  name: "max_pool_5b_pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "max_pool_5b_pool"
  top: "conv_5b_proj"
  name: "conv_5b_proj"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  bottom: "conv_5b_proj"
  name: "bn_5b_proj"
  top: "bn_5b_proj"
  top: "bn_5b_proj/temp1"
  top: "bn_5b_proj/temp2"
  type: "BatchNorm"
}
layer {
  bottom: "bn_5b_proj"
  top: "bn_5b_proj/sc"
  name: "bn_5b_proj/sc"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "bn_5b_proj/sc"
  top: "bn_5b_proj/sc"
  name: "relu_5b_proj"
  type: "ReLU"
}
layer {
  bottom: "bn_5b_1x1/sc"
  bottom: "bn_5b_3x3/sc"
  bottom: "bn_5b_double_3x3_1/sc"
  bottom: "bn_5b_proj/sc"
  top: "ch_concat_5b_chconcat"
  name: "ch_concat_5b_chconcat"
  type: "Concat"
}
layer {
  bottom: "ch_concat_5b_chconcat"
  top: "global_pool"
  name: "global_pool"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  bottom: "global_pool"
  top: "fc1"
  name: "fc1"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "fc1"
  bottom: "label"
  top: "loss3/loss"
  name: "loss3/loss"
  type: "SoftmaxWithLoss"
  loss_weight: 1
  include {
    phase: TRAIN
  }
}
layer {
  bottom: "fc1"
  bottom: "label"
  top: "loss3/top-1"
  name: "loss3/top-1"
  type: "Accuracy"
  include {
    phase: TEST
  }
}
